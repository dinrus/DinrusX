// Разработка 2018-2023 DinrusPro / Dinrus Group. РНЦП Динрус.

/*************************************************************************
   -------------------------------------------------------------------------
   File name:		StatsSizer.cpp
   Version:			v1.00
   Created:			23/10/2009 by Sergey Mikhtonyuk
   Описание:  Definition of CStatsSizer
   -------------------------------------------------------------------------
   History:
*************************************************************************/
#include <DinrusX/DinrusXAct/StdAfx.h>
#include <DinrusX/DinrusXAct/StatsSizer.h>

//////////////////////////////////////////////////////////////////////////
// CStatsSizer
//////////////////////////////////////////////////////////////////////////

CStatsSizer::CStatsSizer()
	: m_size(0), m_count(0)
{}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Release()
{}

//////////////////////////////////////////////////////////////////////////
void CStatsSizer::Reset()
{}

//////////////////////////////////////////////////////////////////////////
void CStatsSizer::End()
{}

//////////////////////////////////////////////////////////////////////////

size_t CStatsSizer::GetTotalSize()
{ return m_size; }

//////////////////////////////////////////////////////////////////////////

size_t CStatsSizer::GetObjectCount()
{ return m_count; }

//////////////////////////////////////////////////////////////////////////

bool CStatsSizer::AddObject(const void* pIdentifier, size_t nSizeBytes, int nCount)
{
	m_size += nSizeBytes;
	m_count++;
	return true;
}

//////////////////////////////////////////////////////////////////////////

static NullResCollector s_nullCollector;

IResourceCollector* CStatsSizer::GetResourceCollector()
{
	return &s_nullCollector;
}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::SetResourceCollector(IResourceCollector*)
{
}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Push(const char* szComponentName)
{}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::PushSubcomponent(const char* szSubcomponentName)
{}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Pop()
{}

//////////////////////////////////////////////////////////////////////////
