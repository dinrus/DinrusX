set(THIS_PROJECT EditorAudioControlsEditor)

project( ${THIS_PROJECT} )


#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_Root
	ACEEnums.h
	ATLControlsModel.cpp
	ATLControlsModel.h
	ATLControlsPanel.cpp
	ATLControlsPanel.h
	ATLControlsResourceDialog.cpp
	ATLControlsResourceDialog.h
	AudioControl.cpp
	AudioControl.h
	AudioControlsEditorPlugin.cpp
	AudioControlsEditorPlugin.h
	AudioControlsEditorUndo.cpp
	AudioControlsEditorUndo.h
	AudioControlsEditorWindow.cpp
	AudioControlsEditorWindow.h
	AudioControlsLoader.cpp
	AudioControlsLoader.h
	AudioControlsWriter.cpp
	AudioControlsWriter.h
	AudioResourceSelectors.cpp
	AudioSystemPanel.cpp
	AudioSystemPanel.h
	ImplementationManager.cpp
	ImplementationManager.h
	InspectorPanel.cpp
	InspectorPanel.h
	StdAfx.cpp
	StdAfx.h
	main.cpp
)


set (SourceGroup_qt
	AudioControlsEditorUI.qrc
	AudioSystemModel.cpp
	AudioSystemModel.h
	QATLControlsTreeModel.cpp
	QATLControlsTreeModel.h
	QAudioControlEditorIcons.h
	QAudioControlTreeWidget.cpp
	QAudioControlTreeWidget.h
	QAudioSystemSettingsDialog.cpp
	QAudioSystemSettingsDialog.h
	QConnectionsModel.cpp
	QConnectionsModel.h
	QConnectionsWidget.cpp
	QConnectionsWidget.h
	QTreeWidgetFilter.cpp
	QTreeWidgetFilter.h
)
source_group("qt" FILES ${SourceGroup_qt})


# Support unity build with uber files
set(EditorAudioControlsEditor_uber_0_cpp ${SourceGroup_Root} ${SourceGroup_qt}  )
enable_unity_build( "EditorAudioControlsEditor_uber_0.cpp" EditorAudioControlsEditor_uber_0_cpp )

set(NoUberFile  )


set (SOURCES
	${EditorAudioControlsEditor_uber_0_cpp}
	${NoUberFile}
)
#END-FILE-LIST

# Enable use MFC as Shared Library
set(CMAKE_MFC_FLAG 2)

include_directories( ${EDITOR_DIR} )
include_directories( ${EDITOR_DIR}/Include )
include_directories( common )
include_directories( ../EditorCommon )

# Common macro for enable QT5 CMake specific settings
custom_enable_QT5()
set(CMAKE_AUTOMOC_MOC_OPTIONS "-bStdAfx.h")

add_definitions(-DNOT_USE_CRY_MEMORY_MANAGER)
add_definitions(-DPLUGIN_EXPORTS)
add_definitions(-DSANDBOX_IMPORTS)
add_definitions(-DEDITOR_COMMON_IMPORTS)
add_definitions(/EHsc)

add_library( ${THIS_PROJECT} ${SOURCES})

target_link_libraries(${THIS_PROJECT} EditorCommon)
target_link_libraries(${THIS_PROJECT} EditorQt)

# Use the Widgets module from Qt 5.
target_link_libraries(${THIS_PROJECT} Qt5::Widgets)

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )
